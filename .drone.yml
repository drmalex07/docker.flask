---

kind: pipeline
type: docker
name: testing-1

steps:
- name: nosetests
  image: python:3.8-alpine 
  when:
    event:
    - push
    - tag
  environment:
    REGISTRY_PASSWORD:
      from_secret: registry_password
  commands:
  - echo tag=${DRONE_TAG} branch=${DRONE_BRANCH} commit=${DRONE_COMMIT}
  - env
  - ls -hal .
  - ls -hal more/hello-octapus/
  - cd helloworld
  - pip install -r requirements.txt -r requirements-testing.txt
  - python setup.py nosetests --verbosity=2


---

# An example using Docker-in-Docker for testing
# see also: https://docs.drone.io/pipeline/docker/examples/services/docker_dind/

kind: pipeline
type: docker
name: testing-2

steps:
- name: nosetests-in-docker
  image: docker:19.03-dind
  when:
    event:
    - push
    - tag
  volumes:
  - name: docker_run
    path: /var/run
  environment:
    DOCKER_HOST: unix:///var/run/docker.sock
  commands:
  # wait for Docker service to be up
  - >-
    (t=0; T=5; while ! docker info -f '{{.ID}}' 2>/dev/null; do t=$(( t + 1 )); test ${t} -ne ${T}; sleep 1; done)
  - docker info
  # build the image for testing
  - docker build . -f testing.dockerfile -t hello-flask:${DRONE_COMMIT}-testing
  # run nosetests inside a testing container
  - docker run --rm -u 1000:1000 -v $PWD:/work -w /work/helloworld hello-flask:${DRONE_COMMIT}-testing nosetests -v
  - echo $${DRONE_COMMIT::10}

services:
- name: docker
  image: docker:19.03-dind
  privileged: true
  command:
  # optional: use a registry mirror to cache images from Docker Hub
  - --registry-mirror=http://registry-mirror:5000
  volumes:
  - name: docker_run
    path: /var/run

volumes:
- name: docker_run
  temp: {}


---

# An example using a Drone "docker" plugin (plugins/docker) for publishing an image to a registry

kind: pipeline
type: docker
name: publish

steps:

- name: publish-image
  image: plugins/docker
  when:
    event:
    - tag
  settings:
    debug: true
    username: alexakis
    password:
      from_secret: docker_password
    repo: alexakis/hello-flask
    mirror: http://registry-mirror:5000
    tags:
    - '1'
    - ${DRONE_TAG}
    #build_args:
    #- VERSION=${DRONE_TAG}

# https://docs.drone.io/pipeline/configuration/#graph-execution
depends_on:
- testing-1
- testing-2


